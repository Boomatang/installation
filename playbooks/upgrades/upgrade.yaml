---
- hosts: localhost
  gather_facts: no
  tasks:
    - set_fact:
        upgrade_webapp_image: quay.io/integreatly/tutorial-web-app:{{ webapp_version }}
        upgrade_webapp_operator_image: quay.io/integreatly/tutorial-web-app-operator:{{ webapp_operator_release_tag }}
        
    - name: Check current version
      shell: "oc get secret manifest -n {{ eval_webapp_namespace }} -o json | jq \".data.generated_manifest\" -r | base64 -d | jq \".version\" -r"
      register: version

    - fail:
        msg: "The current installation could not be verified as the manifest could not be read"
      when: version.stderr != ""
    - fail:
        msg: "The installed version must be 1.3.0 to run this upgrade playbook, {{ version.stdout }} is currently installed"
      when: version.stdout != "release-1.3.0"

    # Solution Explorer
    - name: Bump the Web App operator version to {{ webapp_operator_release_tag }}
      shell: oc patch deployment tutorial-web-app-operator -n {{ eval_webapp_namespace }} --type json -p '[{"op":"replace", "path":"/spec/template/spec/containers/0/image", "value":"{{ upgrade_webapp_operator_image }}"}]'
      register: upgrade_webapp_operator
      failed_when: upgrade_webapp_operator.stderr != '' and 'not patched' not in upgrade_webapp_operator.stderr

    - name: Bump the Web App deployment version to {{ webapp_version }}
      shell: oc patch dc tutorial-web-app -n {{ eval_webapp_namespace }} --type json -p '[{"op":"replace", "path":"/spec/template/spec/containers/0/image", "value":"{{ upgrade_webapp_image }}"}]'
      register: upgrade_webapp
      failed_when: upgrade_webapp.stderr != '' and 'not patched' not in upgrade_webapp.stderr

    - name: Update image streams
      include_role:
        name: images
        tasks_from: import
      with_items:
        - 3scale
        - apicurito
        - codeready
        - enmasse
        - fuse
        - launcher
        - sso
        - webapp
      loop_control:
        loop_var: images_source_namespace

    # Update Mobile Security Service - TODO at next version - change to upgrade - current version will run installation
    - name: Install/Upgrade Mobile Security Service as part of upgrade
      include_role:
        name: mobile_security_service
        tasks_from: upgrade
      when: mobile_security_service

#Update product version (should always be last)
- import_playbook: "../generate-customisation-inventory.yml"
