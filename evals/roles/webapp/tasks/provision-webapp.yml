---
- name: Check if webapp already exists in namespace
  shell: oc get dc/tutorial-web-app -n {{ webapp_namespace }}
  register: webapp_exists_cmd
  failed_when: false

- name: Construct openshift host string
  shell: echo {{ openshift_master_url }} | cut -d '/' -f3
  register: openshift_host

- name: Get SSO route
  shell: oc get route secure-sso -o template --template \{\{.spec.host\}\} -n {{ eval_rhsso_namespace }}
  register: sso_route

- name: Create webapp from template
  shell: >
    oc process -n {{ webapp_namespace }} -f {{ webapp_template }}
    --param=OPENSHIFT_HOST={{ openshift_host.stdout }}
    --param=WEBAPP_IMAGE={{ webapp_image_url }}
    --param=SSO_ROUTE={{ sso_route.stdout }}
    --param=WEBAPP_IMAGE_TAG={{ webapp_image_tag }}  |
    oc create -n {{ webapp_namespace }}
    -f -
  when: webapp_exists_cmd.rc != 0

- name: Get webapp secure route
  shell: oc get route/{{ webapp_route }} -o template --template \{\{.spec.host\}\} -n {{ webapp_namespace }}
  register: webapp_secure_route
  retries: 60
  delay: 5
  until: webapp_secure_route.rc == 0

- set_fact:
    webapp_secure_route: "{{ webapp_secure_route.stdout }}"

- add_host:
    name: WEBAPP_VARS
    webapp_secure_route: "{{ webapp_secure_route }}"

- name: Create template for OpenShift OAuth client
  template:
    src: oauthclient.json.j2
    dest: /tmp/oauthclient.json

- name: Check if OpenShift OAuth client already exists
  shell: oc get oauthclient {{ webapp_client_id }}
  register: webapp_oauthclient_check_cmd
  changed_when: false
  failed_when: false

- name: Remove OpenShift OAuth client
  shell: oc delete oauthclient {{ webapp_client_id }}
  when: webapp_oauthclient_check_cmd.rc == 0

- name: Create OpenShift OAuth client
  shell: oc create -f /tmp/oauthclient.json