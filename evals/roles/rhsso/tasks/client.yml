---
- name: Get RH-SSO secure route
  shell: oc get route/secure-sso -o template --template \{\{.spec.host\}\} -n {{ rhsso_namespace }}
  register: rhsso_secure_route

- name: Get Openshift master URL
  shell: oc version | grep Server | cut -d ' ' -f2
  register: openshift_master_url

- set_fact:
    rhsso_route: "{{ rhsso_secure_route.stdout }}"
    openshift_master_url: "{{ openshift_master_url.stdout }}"

- set_fact:
    rhsso_redirect_uri: "{{ openshift_master_url }}"
  when: rhsso_redirect_uri == ""

- name: Retrieve RH-SSO admin user password
  shell: oc get dc/sso -o jsonpath='{.spec.template.spec.containers[?(@.name=="sso")].env[?(@.name=="SSO_ADMIN_PASSWORD")].value}'
  register: rhsso_admin_password_cmd

- name: Generate RH-SSO auth token for admin user
  uri:
    url: "https://{{ rhsso_route }}/auth/realms/master/protocol/openid-connect/token"
    method: POST
    body: "client_id=admin-cli&username={{ rhsso_admin_username }}&password={{ rhsso_admin_password_cmd.stdout }}&grant_type=password"
    validate_certs: "{{ rhsso_validate_certs }}"
  register: rhsso_auth_response
  retries: 20
  delay: 2
  until: rhsso_auth_response.status == 503 or
         rhsso_auth_response.status in [200, 401, 403]

- name: Generate client template
  template:
    src: "client.json.j2"
    dest: /tmp/client.json
  when: rhsso_auth_response.status != 503

- name: Create public client in {{ rhsso_realm }} realm
  uri:
    url: "https://{{ rhsso_route }}/auth/admin/realms/{{ rhsso_realm }}/clients"
    method: POST
    body: "{{ lookup('file','/tmp/client.json') }}"
    validate_certs: "{{ rhsso_validate_certs }}"
    body_format: json
    headers:
      Authorization: "Bearer {{ rhsso_auth_response.json.access_token }}"
    status_code: [201, 409]
  when: rhsso_auth_response.status != 503

- name: Get client secret
  uri:
    url: "https://{{ rhsso_route }}/auth/admin/realms/{{ rhsso_realm }}/clients/{{ rhsso_client_id }}/client-secret"
    method: GET
    validate_certs: "{{ rhsso_validate_certs }}"
    headers:
      Authorization: "Bearer {{ rhsso_auth_response.json.access_token }}"
    status_code: 200
    return_content: yes
  register: client_config

- name: Store client config locally
  copy:
    content: "{{ client_config }}"
    dest: /tmp/client-config.json

- name: Delete client template file
  file: path=/tmp/client.json state=absent
