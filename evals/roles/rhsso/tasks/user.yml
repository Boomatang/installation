- name: Get RH-SSO secure route
  shell: oc get route/secure-sso -o template --template \{\{.spec.host\}\} -n {{ rhsso_namespace }}
  register: rhsso_secure_route

- set_fact:
    rhsso_route: "{{ rhsso_secure_route.stdout }}"

- name: Generate evaluataions user template
  template:
    src: user.json.j2
    dest: /tmp/user.json

- name: Create SSO evaluations user
  uri:
    url: "https://{{ rhsso_route }}/auth/admin/realms/{{ rhsso_realm }}/users"
    method: POST
    body: "{{ lookup('file', '/tmp/user.json') }}"
    validate_certs: "{{ rhsso_validate_certs }}"
    body_format: json
    headers:
      Authorization: "Bearer {{ rhsso_auth_response.json.access_token }}"
    status_code: [201, 409]
  when: rhsso_auth_response.status != 503

- name: Retrieve created evaluations user
  uri:
    url: "https://{{ rhsso_route }}/auth/admin/realms/{{ rhsso_realm }}/users?first=0&max=1&search={{ rhsso_evals_email }}"
    method: GET
    validate_certs: "{{ rhsso_validate_certs }}"
    return_content: yes
    headers:
      Authorization: "Bearer {{ rhsso_auth_response.json.access_token }}"
    status_code: 200
  register: get_evals_user_request

- set_fact:
    rhsso_eval_user_id: "{{ get_evals_user_request.json[0].id }}"

- name: Generate password reset template
  template:
    src: password-reset.json.j2
    dest: /tmp/password-reset.json

- name: Reset SSO evaluations user password
  uri:
    url: "https://{{ rhsso_route }}/auth/admin/realms/{{ rhsso_realm }}/users/{{ rhsso_eval_user_id }}/reset-password"
    method: PUT
    body: "{{ lookup('file', '/tmp/password-reset.json') }}"
    validate_certs: "{{ rhsso_validate_certs }}"
    body_format: json
    headers:
      Authorization: "Bearer {{ rhsso_auth_response.json.access_token }}"
    status_code: [204]
  when: rhsso_auth_response.status != 503
