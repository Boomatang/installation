---

- name: "Get user ID: {{ username }}"
  xml:
    path: /tmp/3scale_users.xml
    xpath: /users/user[email[text()='{{ email }}']]/id
    content: text
  register: eval_user_xml
  ignore_errors: True

- set_fact:
    eval_user_id: "{{ eval_user_xml.matches.0.id|int }}"
  when: eval_user_xml is defined and eval_user_xml.matches is defined

- name: "Create user: {{ username }}"
  uri:
    url: "https://{{ threescale_admin_route }}/admin/api/users.json"
    method: POST
    body: "access_token={{ threescale_admin_token }}&username={{ username }}&email={{ email }}&password={{ password }}"
    validate_certs: "{{ threescale_sso_validate_certs }}"
    status_code: [201]
  when: eval_user_xml.failed
  register: created_eval_user

- set_fact:
    eval_user_id: "{{ created_eval_user.json.user.id }}"
  when: created_eval_user is defined and created_eval_user.json is defined

- name: "Promote user to admin: {{ username }}"
  uri:
    url: "https://{{ threescale_admin_route }}/admin/api/users/{{ eval_user_id }}/admin.xml"
    method: PUT
    body: "access_token={{ threescale_admin_token }}"
    validate_certs: "{{ threescale_sso_validate_certs }}"
    status_code: [200]

- set_fact:
    w2_route_name: "wt2-{{ email | regex_replace('[@,\\.]', '-') }}"

- name: Check WT2 route exists
  shell: oc get route/{{ w2_route_name }} -n {{ threescale_namespace }}
  register: wt2_route_cmd
  failed_when: false

- name: Create WT2 route
  shell:
    cmd: |
      cat <<EOF | oc apply -n {{ threescale_namespace }} -f -
        apiVersion: v1
        kind: Route
        metadata:
            labels:
              app: 3scale
            name: "{{ w2_route_name }}"
        spec:
            port:
              targetPort: gateway
            tls:
              insecureEdgeTerminationPolicy: None
              termination: edge
            to:
              kind: Service
              name: apicast-staging
      EOF
  when: wt2_route_cmd.stderr != '' and 'NotFound' in wt2_route_cmd.stderr
