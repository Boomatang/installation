---
- name: Get RH-SSO secure route
  shell: oc get route/secure-sso -o template --template \{\{.spec.host\}\} -n {{ threescale_sso_namespace }}
  register: sso_secure_route

- set_fact:
    sso_route: "{{ sso_secure_route.stdout }}"

- name: Retrieve RH-SSO admin user password
  shell: oc get dc/sso -o jsonpath='{.spec.template.spec.containers[?(@.name=="sso")].env[?(@.name=="SSO_ADMIN_PASSWORD")].value}' -n {{ threescale_sso_namespace }}
  register: sso_admin_password_cmd

- name: Generate RH-SSO auth token for admin user
  uri:
    url: "https://{{ sso_route }}/auth/realms/{{ threescale_sso_admin_realm }}/protocol/openid-connect/token"
    method: POST
    body: "client_id=admin-cli&username={{ threescale_sso_admin_username }}&password={{ sso_admin_password_cmd.stdout }}&grant_type=password"
    validate_certs: "{{ threescale_sso_validate_certs }}"
  register: sso_auth_response
  retries: 20
  delay: 2
  until: sso_auth_response.status == 200

- name: Create public client in {{ threescale_sso_realm }} realm
  uri:
    url: "https://{{ sso_route }}/auth/admin/realms/{{ threescale_sso_realm }}/clients"
    method: POST
    body: "{{ lookup('template', './sso-client.json.j2') }}"
    validate_certs: "{{ threescale_sso_validate_certs }}"
    body_format: json
    headers:
      Authorization: "Bearer {{ sso_auth_response.json.access_token }}"
    status_code: [201, 409]

- name: Get client secret
  uri:
    url: "https://{{ sso_route }}/auth/admin/realms/{{ threescale_sso_realm }}/clients/{{ threescale_sso_client_id }}/client-secret"
    method: GET
    validate_certs: "{{ threescale_sso_validate_certs }}"
    headers:
      Authorization: "Bearer {{ sso_auth_response.json.access_token }}"
    status_code: 200
    return_content: yes
  register: client_secret

- set_fact:
    threescale_sso_client_secret: "{{ client_secret.json.value }}"
    threescale_sso_site: "https://{{ sso_route }}/auth/realms/{{ threescale_sso_realm }}"

