---
- name: "get manifest secret from webapp namespace"
  shell: oc get secret {{ customise_web_console.webapp.secret }} -n {{ eval_webapp_namespace }} --template '{{ "{{" }} .data.generated_manifest | base64decode {{ "}}" }}'
  register: manifest
  failed_when: manifest.stderr != ""

- set_fact:
    manifest_obj: "{{ manifest.stdout | from_json }}"

- name: "Generate Javascript file"
  template:
    src: web-console-config.js.j2
    dest: "/tmp/{{ customise_web_console.javascript_filename }}"

- name: "Create {{ customise_web_console.namespace }} namespace"
  shell: "oc create namespace {{ customise_web_console.namespace }}"
  register: web_console_config_namespace_result
  failed_when: web_console_config_namespace_result.stderr != '' and 'AlreadyExists' not in web_console_config_namespace_result.stderr

- name: "Delete current configmap"
  shell: "oc delete configmap {{ customise_web_console.configmap_name }} -n {{ customise_web_console.namespace }}"
  failed_when: false

- name: "Create {{ customise_web_console.configmap_name }} configmap"
  shell: "oc create configmap {{ customise_web_console.configmap_name }} -n {{ customise_web_console.namespace }} --from-file=/tmp/{{ customise_web_console.javascript_filename }}"
  register: web_console_configmap_create_result
  failed_when: web_console_configmap_create_result.stderr != '' and 'AlreadyExists' not in web_console_configmap_create_result.stderr

- name: "Create deploy template file"
  template:
    src: deploy.yml.j2
    dest: "{{ customise_web_console.deploy_filename }}"

- name: "Deploy {{ customise_web_console.app_name }}"
  shell: "oc apply -f {{ customise_web_console.deploy_filename }} -n {{ customise_web_console.namespace }}"

- name: "Get route to hosted javascript file"
  shell: oc get route {{ customise_web_console.route_name }} -n {{ customise_web_console.namespace }} --template '{{ "{{" }}printf "https://%s\n" .spec.host{{ "}}" }}'
  register: get_javascript_route
  failed_when: get_javascript_route.stderr != ""

- name: "download current openshift web console configmap"
  shell: oc get configmap {{ customise_web_console.web_console.configmap }} -n {{ customise_web_console.web_console.namespace }} --template '{{ "{{" }} index .data "{{ customise_web_console.web_console.configmap_key -}}" {{ "}}" }}'
  register: get_web_console_config_result
  failed_when: get_web_console_config_result.stderr != ""

- name: "Rewrite console configmap"
  when: get_javascript_route.stdout + '/' + customise_web_console.javascript_filename not in get_web_console_config_result.stdout
  block:

    - name: "determine changes needed to add script url to web console config"
      shell: echo '{{ get_web_console_config_result.stdout | from_yaml | to_nice_json}}' | jq '.extensions.scriptURLs |= (. + ["{{ get_javascript_route.stdout }}/{{ customise_web_console.javascript_filename }}"] | unique)'
      register: new_web_console_config_json_result

    - name: "write patched web console config to file"
      copy: content={{ new_web_console_config_json_result.stdout | from_json | to_nice_yaml(indent=2) }} dest=/tmp/{{ customise_web_console.web_console.configmap_key }}

    - name: "update {{ customise_web_console.web_console.namespace }}/{{ customise_web_console.web_console.configmap }} configmap"
      shell: oc create configmap {{ customise_web_console.web_console.configmap }} --from-file=/tmp/{{ customise_web_console.web_console.configmap_key }} -n {{ customise_web_console.web_console.namespace }} --dry-run -o yaml | oc replace -f -
