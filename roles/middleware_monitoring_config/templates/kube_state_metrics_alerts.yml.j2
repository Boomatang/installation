apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    monitoring-key: "{{monitoring_label_value}}"
  name: ksm-alerts
spec:
  groups:
    - name: general.rules
      rules:
      - alert: KubePodCrashLooping
        annotations:
          message: Pod {{ '{{' }} $labels.namespace {{ '}}' }}/{{ '{{' }} $labels.pod {{ '}}' }} ({{ '{{' }} $labels.container {{ '}}' }}) is restarting {{ '{{' }} printf "%.2f" $value {{ '}}' }} times every 5 minutes; for the last 15 minutes.
        expr: |
          rate(kube_pod_container_status_restarts_total{job="kube-state-metrics"}[15m]) * on (namespace, namespace) group_left(label_monitoring_key) kube_namespace_labels{label_monitoring_key="middleware"} * 60 * 5 > 0
        for: 15m
        labels:
          severity: critical
      - alert: ESPodCount
        annotations:
          message: Expected at least Elastic Search 1 pods in namespace {{ '{{' }} $labels.namespace {{ '}}' }}.
        expr: |
          (1 - absent(kube_pod_status_ready{condition="true",namespace="openshift-logging", pod=~"logging-es-data-master-.*"})) 
        for: 5m
        labels:
          severity: warning
      - alert: ESNotReady
        annotations:
          message: Not all Elastic Search replication controllers are in a ready state.
        expr: |
          count(kube_replicationcontroller_status_ready_replicas{namespace="openshift-logging", replicationcontroller=~"logging-es-data-master-.*"}) != sum(kube_replicationcontroller_status_ready_replicas{namespace="openshift-logging", replicationcontroller=~"logging-es-data-master-.*"})
        for: 5m
        labels:
          severity: warning
      - alert: KubePodNotReady
        annotations:
          message: Pod {{ '{{' }} $labels.namespace {{ '}}' }}/{{ '{{' }} $labels.pod {{ '}}' }} has been in a non-ready state for longer than 15 minutes.
        expr: |
          sum by(pod, namespace) (kube_pod_status_phase{phase=~"Pending|Unknown"} * on (namespace, namespace) group_left(label_monitoring_key) kube_namespace_labels{label_monitoring_key="middleware"}) > 0
        for: 15m
        labels:
          severity: critical
      - alert: KubePodImagePullBackOff
        annotations:
          message: Pod {{ '{{' }} $labels.namespace {{ '}}' }}/{{ '{{' }} $labels.pod {{ '}}' }} has been unable to pull it's image for longer than 5 minutes.
        expr: |
          (kube_pod_container_status_waiting_reason{reason="ImagePullBackOff"} * on (namespace, namespace) group_left(label_monitoring_key) kube_namespace_labels{label_monitoring_key="middleware"}) > 0
        for: 5m
        labels:
          severity: critical
      - alert: KubePodBadConfig
        annotations:
          message: Pod {{ '{{' }} $labels.namespace {{ '}}' }}/{{ '{{' }} $labels.pod {{ '}}' }} has been unable to start due to a bad configuration for longer than 5 minutes.
        expr: |
          (kube_pod_container_status_waiting_reason{reason="CreateContainerConfigError"} * on (namespace, namespace) group_left(label_monitoring_key) kube_namespace_labels{label_monitoring_key=~".*"}) > 0
        for: 5m
      - alert: KubePodStuckCreating
        annotations:
          message: Pod {{ '{{' }} $labels.namespace {{ '}}' }}/{{ '{{' }} $labels.pod {{ '}}' }} has been trying to start for longer than 15 minutes - this could indicate a configuration error.
        expr: |
          (kube_pod_container_status_waiting_reason{reason="ContainerCreating"} * on (namespace, namespace) group_left(label_monitoring_key) kube_namespace_labels{label_monitoring_key=~".*"}) > 0
        for: 15m
      - alert: ThreeScaleApicastStagingPod
        annotations:
          message: >-
            3Scale apicast-staging has no pods in a ready state.
        expr: |
          absent(kube_pod_status_ready{namespace="3scale", condition="true", pod=~"apicast-staging.*"})
        for: 5m
        labels:
          severity: critical
      - alert: ThreeScaleApicastProductionPod
        annotations:
          message: >-
            3Scale apicast-production has no pods in a ready state.
        expr: |
          absent(kube_pod_status_ready{namespace="3scale", condition="true", pod=~"apicast-production.*"})
        for: 5m
        labels:
          severity: critical
      - alert: ThreeScaleBackendWorkerPod
        annotations:
          message: >-
            3Scale backend-worker has no pods in a ready state.
        expr: |
          absent(kube_pod_status_ready{namespace="3scale", condition="true", pod=~"backend-worker.*"})
        for: 5m
        labels:
          severity: critical
      - alert: ThreeScaleBackendListenerPod
        annotations:
          message: >-
            3Scale backend-listener has no pods in a ready state.
        expr: |
          absent(kube_pod_status_ready{namespace="3scale", condition="true", pod=~"backend-listener.*"})
        for: 5m
        labels:
          severity: critical
      - alert: ThreeScaleBackendRedisPod
        annotations:
          message: >-
            3Scale backend-redis has no pods in a ready state.
        expr: |
          absent(kube_pod_status_ready{namespace="3scale", condition="true", pod=~"backend-redis.*"})
        for: 5m
        labels:
          severity: critical
      - alert: ThreeScaleSystemRedisPod
        annotations:
          message: >-
            3Scale system-redis has no pods in a ready state.
        expr: |
          absent(kube_pod_status_ready{namespace="3scale", condition="true", pod=~"system-redis.*"})
        for: 5m
        labels:
          severity: critical
      - alert: ThreeScaleSystemMySQLPod
        annotations:
          message: >-
            3Scale system-mysql has no pods in a ready state.
        expr: |
          absent(kube_pod_status_ready{namespace="3scale", condition="true", pod=~"system-mysql.*"})
        for: 5m
        labels:
          severity: critical
      - alert: ThreeScaleSystemAppPod
        annotations:
          message: >-
            3Scale system-app has no pods in a ready state.
        expr: |
          absent(kube_pod_status_ready{namespace="3scale", condition="true", pod=~"system-app-.*"})
        for: 5m
        labels:
          severity: critical
      - alert: ThreeScaleAdminUIBBT
        annotations:
          message: >-
            3Scale Admin UI Blackbox Target: If this console is unavailable,
            the client is unable to configure or administer their API setup.
        expr: |
          absent(probe_success{job="blackbox", service="3scale-admin-ui"})
        for: 5m
        labels:
          severity: critical
      - alert: ThreeScaleDeveloperUIBBT
        annotations:
          message: >-
            3Scale Developer UI Blackbox Target: If this console is
            unavailable, the clients developers are unable signup or perform
            API management.
        expr: >
          absent(probe_success{job="blackbox",
          service="3scale-developer-console-ui"})
        for: 5m
        labels:
          severity: critical
      - alert: ThreeScaleSystemAdminUIBBT
        annotations:
          message: >-
            3Scale System Admin UI Blackbox Target: If this console is
            unavailable, the client is unable to perform Account Management,
            Analytics or Billing.
        expr: >
          absent(probe_success{job="blackbox",
          service="3scale-system-admin-ui"})
        for: 5m
        labels:
          severity: critical
      - alert: ThreeScalePodCount
        annotations:
          message: Pod count for namespace {{ '{{' }} $labels.namespace {{ '}}' }} is {{ '{{' }} printf "%.0f" $value {{ '}}' }}. Expected exactly 15 pods.
        expr: |
          (1-absent(kube_pod_status_ready{condition="true", namespace="{{ threescale_namespace }}"})) or sum(kube_pod_status_ready{condition="true", namespace="{{ threescale_namespace }}"}) >= 15
        for: 5m
        labels:
          severity: warning
      - alert: AMQOnlinePodCount
        annotations:
          message: Pod count for namespace {{ '{{' }} $labels.namespace {{ '}}' }} is {{ '{{' }} printf "%.0f" $value {{ '}}' }}. Expected at least 6 pods.
        expr: |
          (1-absent(kube_pod_status_ready{condition="true", namespace="{{eval_enmasse_namespace}}"})) or sum(kube_pod_status_ready{condition="true", namespace="{{eval_enmasse_namespace}}"}) < 6
        for: 5m
        labels:
          severity: critical
      - alert: FuseOnlinePodCount
        annotations:
          message: Pod count for namespace {{ '{{' }} $labels.namespace {{ '}}' }} is {{ '{{' }} printf "%.0f" $value {{ '}}' }}. Expected at least 8 pods.
        expr: |
          (1-absent(kube_pod_status_ready{condition="true", namespace="{{eval_managed_fuse_namespace}}"})) or sum(kube_pod_status_ready{condition="true", namespace="{{eval_managed_fuse_namespace}}"}) < 8
        for: 5m
        labels:
          severity: critical
      - alert: ApicuritoPodCount
        annotations:
          message: Pod count for namespace {{ '{{' }} $labels.namespace {{ '}}' }} is {{ '{{' }} printf "%.0f" $value {{ '}}' }}. Expected exactly 2 pods.
        expr: |
          (1-absent(kube_pod_status_ready{condition="true", namespace="{{Â eval_apicurito_namespace }}"})) or sum(kube_pod_status_ready{condition="true", namespace="{{ eval_apicurito_namespace }}"}) != 2
        for: 5m
        labels:
          severity: critical
      - alert: CodeReadyPodCount
        annotations:
          message: Pod count for namespace {{ '{{' }} $labels.namespace {{ '}}' }} is {{ '{{' }} printf "%.0f" $value {{ '}}' }}. Expected at least 2 pods.
        expr: |
          (1-absent(kube_pod_status_ready{condition="true", namespace="{{ eval_che_namespace }}"})) or sum(kube_pod_status_ready{condition="true", namespace="{{ eval_che_namespace }}"}) < 2
        for: 5m
        labels:
          severity: critical
      - alert: LauncherPodCount
        annotations:
          message: Pod count for namespace {{ '{{' }} $labels.namespace {{ '}}' }} is {{ '{{' }} printf "%.0f" $value {{ '}}' }}. Expected exactly 6 pods.
        expr: |
          (1-absent(kube_pod_status_ready{condition="true", namespace="{{ eval_launcher_namespace }}"})) or sum(kube_pod_status_ready{condition="true", namespace="{{ eval_launcher_namespace }}"}) != 6
        for: 5m
        labels:
          severity: critical
      - alert: ManagedServiceBrokerPodCount
        annotations:
          message: Pod count for namespace {{ '{{' }} $labels.namespace {{ '}}' }} is {{ '{{' }} printf "%.0f" $value {{ '}}' }}. Expected exactly 1 pods.
        expr: |
          (1-absent(kube_pod_status_ready{condition="true", namespace="{{ eval_msbroker_namespace }}"})) or sum(kube_pod_status_ready{condition="true", namespace="{{ eval_msbroker_namespace }}"}) != 1
        for: 5m
        labels:
          severity: critical
      - alert: MiddlewareMonitoringPodCount
        annotations:
          message: Pod count for namespace {{ '{{' }} $labels.namespace {{ '}}' }} is {{ '{{' }} printf "%.0f" $value {{ '}}' }}. Expected exactly 6 pods.
        expr: |
          (1-absent(kube_pod_status_ready{condition="true", namespace="{{ eval_middleware_monitoring_namespace }}"})) or sum(kube_pod_status_ready{condition="true", namespace="{{ eval_middleware_monitoring_namespace }}"}) != 6
        for: 5m
        labels:
          severity: critical
      - alert: NexusPodCount
        annotations:
          message: Pod count for namespace {{ '{{' }} $labels.namespace {{ '}}' }} is {{ '{{' }} printf "%.0f" $value {{ '}}' }}. Expected exactly 1 pods.
        expr: |
          (1-absent(kube_pod_status_ready{condition="true", namespace="{{ eval_nexus_namespace }}"})) or sum(kube_pod_status_ready{condition="true", namespace="{{ eval_nexus_namespace }}"}) != 1
        for: 5m
        labels:
          severity: critical
      - alert: SSOPodCount
        annotations:
          message: Pod count for namespace {{ '{{' }} $labels.namespace {{ '}}' }} is {{ '{{' }} printf "%.0f" $value {{ '}}' }}. Expected exactly 3 pods.
        expr: |
          (1-absent(kube_pod_status_ready{condition="true", namespace="{{ eval_rhsso_namespace }}"})) or sum(kube_pod_status_ready{condition="true", namespace="{{ eval_rhsso_namespace }}"}) != 3
        for: 5m
        labels:
          severity: critical
      - alert: SolutionExplorerPodCount
        annotations:
          message: Pod count for namespace {{ '{{' }} $labels.namespace {{ '}}' }} is {{ '{{' }} printf "%.0f" $value {{ '}}' }}. Expected exactly 2 pods.
        expr: |
          (1-absent(kube_pod_status_ready{condition="true", namespace="{{ eval_webapp_namespace }}"})) or sum(kube_pod_status_ready{condition="true", namespace="{{ eval_webapp_namespace }}"}) != 2
        for: 5m
        labels:
          severity: critical
      - alert: ThreeScalePodHighMemory
        annotations:
          message: The {{ '{{' }} $labels.container {{ '}}' }} pod is using {{ '{{' }} printf "%.0f" $value {{ '}}' }}% of available memory.
          scaling_plan: https://github.com/integr8ly/middleware-load-testing/blob/master/sops/3scale-scaling.md
        expr: |
          sum by(container) (label_replace(container_memory_usage_bytes{container_name!="",namespace="{{ threescale_namespace }}"}, "container", "$1", "container_name", "(.*)")) / sum by(container) (kube_pod_container_resource_limits_memory_bytes{namespace="{{ threescale_namespace }}"}) * 100 > 80
        for: 10m
        labels:
          severity: critical
      - alert: SSOPodHighMemory
        annotations:
          message: The {{ '{{' }} $labels.container {{ '}}' }} pod is using {{ '{{' }} printf "%.0f" $value {{ '}}' }}% of available memory.
          scaling_plan: <to-do add SSO scaling plan once it's available>
        expr: |
          sum by(container) (label_replace(container_memory_usage_bytes{container_name!="",namespace="{{ eval_rhsso_namespace }}"}, "container", "$1", "container_name", "(.*)")) / sum by(container) (kube_pod_container_resource_limits_memory_bytes{namespace="{{ eval_rhsso_namespace }}"}) * 100 > 80
        for: 10m
        labels:
          severity: critical
      - alert: AMQOnlinePodHighMemory
        annotations:
          message: The {{ '{{' }} $labels.container {{ '}}' }} pod is using {{ '{{' }} printf "%.0f" $value {{ '}}' }}% of available memory.
          scaling_plan: <to-do add AMQ scaling plan once it's available>
        expr: |
          sum by(container) (label_replace(container_memory_usage_bytes{container_name!="",namespace="{{ eval_enmasse_namespace }}"}, "container", "$1", "container_name", "(.*)")) / sum by(container) (kube_pod_container_resource_limits_memory_bytes{namespace="{{ eval_enmasse_namespace }}"}) * 100 > 80
        for: 10m
        labels:
          severity: critical
      - alert: ThreeScalePodHighCPU
        annotations:
          message: The {{ '{{' }} $labels.container {{ '}}' }} pod is using {{ '{{' }} printf "%.0f" $value {{ '}}' }}% of CPU.
          scaling_plan: https://github.com/integr8ly/middleware-load-testing/blob/master/sops/3scale-scaling.md
        expr: |
          sum(label_replace(namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate{namespace="{{ threescale_namespace }}"}, 'container', '$1', 'container_name', '(.*)')) by (container) / sum(kube_pod_container_resource_limits_cpu_cores{namespace="{{ threescale_namespace }}"}) by (container) * 100 > 80
        for: 10m
        labels:
          severity: critical
